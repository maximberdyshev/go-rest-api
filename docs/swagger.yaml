basePath: /api/v1
definitions:
  entity.Content:
    properties:
      current_page:
        type: integer
      items: {}
      total_items:
        type: integer
      total_page:
        type: integer
    type: object
  entity.Couplet:
    properties:
      text:
        type: string
    type: object
  entity.NewSong:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  entity.Song:
    properties:
      group:
        type: string
      link:
        type: string
      name:
        type: string
      release_date:
        type: string
      text:
        items:
          type: string
        type: array
    type: object
  http_v1_handler.Response:
    properties:
      description:
        type: string
    type: object
host: localhost:5000
info:
  contact: {}
  title: REST-API
  version: 1.0.0
paths:
  /songs:
    get:
      consumes:
      - application/json
      parameters:
      - description: song name
        in: query
        name: name
        type: string
      - description: song group
        in: query
        name: group
        type: string
      - description: song release date
        in: query
        name: release_date
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/http_v1_handler.Response'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/entity.Content'
                  - properties:
                      items:
                        $ref: '#/definitions/entity.Song'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
      summary: Get filtered songs.
      tags:
      - Songs
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.NewSong'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
      summary: Adding a new song.
      tags:
      - Songs
  /songs/{name}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: song name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
      summary: Delete song.
      tags:
      - Songs
    get:
      consumes:
      - application/json
      parameters:
      - description: song name
        in: path
        name: name
        required: true
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/http_v1_handler.Response'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/entity.Content'
                  - properties:
                      items:
                        $ref: '#/definitions/entity.Couplet'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
      summary: Get song text with couplet pagination.
      tags:
      - Songs
    put:
      consumes:
      - application/json
      parameters:
      - description: song name
        in: path
        name: name
        required: true
        type: string
      - description: song text in json
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_v1_handler.Response'
      summary: Update song.
      tags:
      - Songs
security:
- ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
